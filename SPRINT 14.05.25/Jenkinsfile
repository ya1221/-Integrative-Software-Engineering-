pipeline {
  agent any

  options {
    timeout(time: 10, unit: 'MINUTES')
    buildDiscarder(logRotator(numToKeepStr: '10'))
    ansiColor('xterm')
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build') {
      steps {
        sh './gradlew clean build --no-daemon'
      }
    }

    stage('Test') {
      steps {
        sh './gradlew test --no-daemon'
      }
    }

    stage('Package') {
      steps {
        sh './gradlew bootJar --no-daemon'
      }
    }

    stage('Archive') {
      steps {
        archiveArtifacts artifacts: 'build/libs/*.jar', fingerprint: true
      }
    }
  }

  post {
    success {
      echo '✅ Build passed.'
    }
    failure {
      echo '❌ Build failed.'
      mail to: 'Itay.Benderski@s.afeka.ac.il',
           subject: "❌ Jenkins Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
           body: "See details: ${env.BUILD_URL}"
    }
    always {
      junit 'build/test-results/test/*.xml'
    }
  }
}
